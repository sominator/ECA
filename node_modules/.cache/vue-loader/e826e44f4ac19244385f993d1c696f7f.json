{"remainingRequest":"C:\\Users\\ultfl\\coding\\ECA\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ultfl\\coding\\ECA\\src\\components\\Spell.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\ultfl\\coding\\ECA\\src\\components\\Spell.vue","mtime":1582083073565},{"path":"C:\\Users\\ultfl\\coding\\ECA\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\ultfl\\coding\\ECA\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ultfl\\coding\\ECA\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n    name: \"Spell\",\n    props: {\n        spellData: Object,\n        talentChoice: Array\n    },\n    data: function () {\n        return {\n            choice: \"\",\n            isActive: false\n        }\n    },\n    methods: {\n        chosen: function () {\n            this.choice = this.spellData.name;\n            if (this.isActive) {\n                this.$emit(\"talentRemoved\", this.choice);\n            } else {\n                this.$emit(\"talentAdded\", this.choice);\n            }\n        }\n    },\n    watch: {\n        talentChoice: function () {\n            if (this.talentChoice.includes(this.choice)) {\n                this.isActive = true;\n            } else {\n                this.isActive = false;\n            }\n        }\n    }\n}\n",{"version":3,"sources":["Spell.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Spell.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"spell\" v-bind:class=\"{selected: isActive}\" v-on:click=\"chosen\">\r\n            <h3>{{spellData.name}}</h3>\r\n            <p>\r\n                Action: {{spellData.action}}<br />\r\n                Range: {{spellData.range}}<br />\r\n                Duration: {{spellData.duration}}<br />\r\n                Ceridium: {{spellData.ceridium}}\r\n            </p>\r\n            <p>{{spellData.description}}</p>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        name: \"Spell\",\r\n        props: {\r\n            spellData: Object,\r\n            talentChoice: Array\r\n        },\r\n        data: function () {\r\n            return {\r\n                choice: \"\",\r\n                isActive: false\r\n            }\r\n        },\r\n        methods: {\r\n            chosen: function () {\r\n                this.choice = this.spellData.name;\r\n                if (this.isActive) {\r\n                    this.$emit(\"talentRemoved\", this.choice);\r\n                } else {\r\n                    this.$emit(\"talentAdded\", this.choice);\r\n                }\r\n            }\r\n        },\r\n        watch: {\r\n            talentChoice: function () {\r\n                if (this.talentChoice.includes(this.choice)) {\r\n                    this.isActive = true;\r\n                } else {\r\n                    this.isActive = false;\r\n                }\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    .spell {\r\n        border: 3px solid cyan;\r\n        border-radius: 5px;\r\n        text-align: left;\r\n        width: 250px;\r\n        min-height: 320px;\r\n        padding-left: 5px;\r\n        margin: 5px 5px 5px 5px;\r\n    }\r\n    .spell:hover {\r\n        border-color: hotpink;\r\n        cursor: pointer;\r\n    }\r\n    .selected {\r\n        border-color: hotpink;\r\n    }\r\n    h3 {\r\n        text-align: center\r\n    }\r\n</style>"]}]}